definitions:
  models.ChildRequest:
    properties:
      password:
        example: password
        minLength: 6
        type: string
      username:
        example: jdoe
        type: string
    required:
    - password
    - username
    type: object
  models.ChildRequestResponse:
    properties:
      child:
        type: string
      message:
        type: string
    type: object
  models.CreatePaymentIntentRequest:
    properties:
      amount:
        example: 1000
        type: integer
      currency:
        example: eur
        type: string
    required:
    - amount
    - currency
    type: object
  models.CreatePaymentIntentResponse:
    properties:
      clientSecret:
        type: string
    type: object
  models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.PublicUser:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
    type: object
  models.UserLogin:
    properties:
      password:
        example: password
        type: string
      username:
        example: jdoe
        type: string
    required:
    - password
    - username
    type: object
  models.UserRegister:
    properties:
      email:
        type: string
      first_name:
        example: John
        type: string
      last_name:
        example: Doe
        type: string
      password:
        example: password
        type: string
      role:
        example: parent
        type: string
      username:
        example: jdoe
        type: string
    required:
    - first_name
    - last_name
    - password
    - role
    - username
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
paths:
  /create-payment-intent:
    post:
      consumes:
      - application/json
      description: Create a payment intent for purchasing tokens
      parameters:
      - description: Payment Intent Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreatePaymentIntentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CreatePaymentIntentResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a payment intent
      tags:
      - PaymentIntent
  /user/child:
    get:
      consumes:
      - application/json
      description: Get all children linked to the current authenticated parent
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.PublicUser'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all children linked to the current authenticated parent
      tags:
      - children
    post:
      consumes:
      - application/json
      description: Create a child account linked to the current authenticated parent
      parameters:
      - description: Child Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ChildRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ChildRequestResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a child account
      tags:
      - children
  /user/login:
    post:
      consumes:
      - application/json
      description: Logs in a user
      parameters:
      - description: User credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: Token
          schema:
            type: string
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Invalid request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Login
      tags:
      - auth
  /user/register:
    post:
      consumes:
      - application/json
      description: Registers a new user
      parameters:
      - description: User details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserRegister'
      produces:
      - application/json
      responses:
        "200":
          description: Registration successful
          schema:
            type: string
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Register
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    description: Bearer token
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
